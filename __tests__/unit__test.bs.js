// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var DiffieHellman = require("../src/DiffieHellman.bs.js");

function try_me(name, inst) {
  return Jest.describe(name, (function (param) {
                Jest.test("generateKeys", (function (param) {
                        var r = DiffieHellman.generateKeys(inst, /* hex */5194459);
                        return Jest.Expect[/* toEqual */12]("", Jest.Expect[/* not__ */24](Jest.Expect[/* expect */0](r)));
                      }));
                Jest.test("getGenerator", (function (param) {
                        var g = DiffieHellman.getGenerator(inst, /* hex */5194459);
                        return Jest.Expect[/* toEqual */12]("", Jest.Expect[/* not__ */24](Jest.Expect[/* expect */0](g)));
                      }));
                Jest.test("getPrime", (function (param) {
                        var p = DiffieHellman.getPrime(inst, /* hex */5194459);
                        return Jest.Expect[/* toEqual */12]("", Jest.Expect[/* not__ */24](Jest.Expect[/* expect */0](p)));
                      }));
                Jest.test("getPrivateKey", (function (param) {
                        var r = DiffieHellman.getPrivateKey(inst, /* hex */5194459);
                        return Jest.Expect[/* toEqual */12]("", Jest.Expect[/* not__ */24](Jest.Expect[/* expect */0](r)));
                      }));
                return Jest.test("getPublicKey", (function (param) {
                              var p = DiffieHellman.getPublicKey(inst, /* hex */5194459);
                              return Jest.Expect[/* toEqual */12]("", Jest.Expect[/* not__ */24](Jest.Expect[/* expect */0](p)));
                            }));
              }));
}

var a = DiffieHellman.createDiffieHellman1(512);

var b = DiffieHellman.createDiffieHellman4(DiffieHellman.getPrime(a, /* hex */5194459), /* hex */5194459, DiffieHellman.getGenerator(a, /* hex */5194459), /* hex */5194459);

var instances = /* array */[
  /* tuple */[
    "createDiffieHellman1",
    a
  ],
  /* tuple */[
    "createDiffieHellman4",
    b
  ]
];

Belt_Array.forEach(instances, (function (param) {
        return try_me(param[0], param[1]);
      }));

var sa = /* record */[/* contents */""];

var sb = /* record */[/* contents */""];

Jest.describe("computeSecret", (function (param) {
        Jest.test("A", (function (param) {
                var r = DiffieHellman.computeSecret(a, DiffieHellman.getPublicKey(b, /* hex */5194459), /* hex */5194459, /* hex */5194459);
                sa[0] = r;
                return Jest.Expect[/* toEqual */12]("", Jest.Expect[/* not__ */24](Jest.Expect[/* expect */0](r)));
              }));
        Jest.test("B", (function (param) {
                var r = DiffieHellman.computeSecret(b, DiffieHellman.getPublicKey(a, /* hex */5194459), /* hex */5194459, /* hex */5194459);
                sb[0] = r;
                return Jest.Expect[/* toEqual */12]("", Jest.Expect[/* not__ */24](Jest.Expect[/* expect */0](r)));
              }));
        return Jest.test("Equality", (function (param) {
                      return Jest.Expect[/* toEqual */12](sb, Jest.Expect[/* expect */0](sa));
                    }));
      }));

var enc = /* hex */5194459;

var do_logging = false;

exports.enc = enc;
exports.do_logging = do_logging;
exports.try_me = try_me;
exports.a = a;
exports.b = b;
exports.instances = instances;
exports.sa = sa;
exports.sb = sb;
/* a Not a pure module */
